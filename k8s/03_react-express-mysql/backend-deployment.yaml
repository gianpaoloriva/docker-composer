apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/private: "true"
        io.kompose.network/public: "true"
        io.kompose.service: backend
    spec:
      containers:
      - args:
        - npm
        - run
        - start-watch
        env:
        - name: DATABASE_DB
          value: example
        - name: DATABASE_HOST
          value: db
        - name: DATABASE_PASSWORD
          value: /run/secrets/db-password
        - name: DATABASE_USER
          value: root
        - name: NODE_ENV
          value: development
        image: backend
        imagePullPolicy: ""
        name: backend
        ports:
        - containerPort: 80
        - containerPort: 9229
        - containerPort: 9230
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/db-password
          name: db-password
        - mountPath: /code/src
          name: backend-claim0
          readOnly: true
        - mountPath: /code/package.json
          name: backend-claim1
        - mountPath: /code/package-lock.json
          name: backend-claim2
        - mountPath: /opt/app/node_modules
          name: back-notused
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: db-password
        secret:
          items:
          - key: db-password
            path: db-password
          secretName: db-password
      - name: backend-claim0
        persistentVolumeClaim:
          claimName: backend-claim0
          readOnly: true
      - name: backend-claim1
        persistentVolumeClaim:
          claimName: backend-claim1
      - name: backend-claim2
        persistentVolumeClaim:
          claimName: backend-claim2
      - name: back-notused
        persistentVolumeClaim:
          claimName: back-notused
status: {}
